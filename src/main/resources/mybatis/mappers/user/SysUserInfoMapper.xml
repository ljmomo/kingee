<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.junly.dao.user.SysUserInfoMapper">
  <resultMap id="BaseResultMap" type="com.junly.model.user.SysUserInfo">
    <id column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="birthday" jdbcType="VARCHAR" property="birthday" />
    <result column="auth_type" jdbcType="INTEGER" property="authType" />
    <result column="head_url" jdbcType="VARCHAR" property="headUrl" />
    <result column="user_from" jdbcType="INTEGER" property="userFrom" />
    <result column="user_level" jdbcType="INTEGER" property="userLevel" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
   
    <!-- 用戶信息 -->
   <resultMap id="UserInfoResultMap" type="com.junly.model.user.UserInfo">
    <id column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="birthday" jdbcType="VARCHAR" property="birthday" />
    <result column="auth_type" jdbcType="INTEGER" property="authType" />
    <result column="head_url" jdbcType="VARCHAR" property="headUrl" />
    <result column="user_from" jdbcType="INTEGER" property="userFrom" />
    <result column="user_level" jdbcType="INTEGER" property="userLevel" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="pass_word" jdbcType="VARCHAR" property="passWord" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="user_type" jdbcType="INTEGER" property="userType" />
  </resultMap>
  
  
  
    <sql id="User-Info-Base-Column-List" >
         su.user_id,
		  su.user_name,
		  su.pass_word,
		  su.`status`,
		  su.user_type,
		  su.create_time,
		  sui.nick_name,
		  sui.auth_type,
		  sui.birthday,
		  sui.head_url,
		  sui.last_login_time,
		  sui.login_ip,
		  sui.sex,
		  sui.user_from,
		  sui.user_level
		FROM
			sys_user su,
			sys_user_info sui
		WHERE
			su.user_id = sui.user_id
  </sql>
  
  
  
  <sql id="Base_Column_List">
    user_id, nick_name, status, sex, birthday, auth_type, head_url, user_from, user_level, 
    login_ip, last_login_time, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user_info
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_user_info
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.junly.model.user.SysUserInfo">
    insert into sys_user_info (user_id, nick_name, 
      sex, birthday, auth_type, 
      head_url, user_from, user_level, 
      login_ip, last_login_time, create_time, 
      update_time)
    values (#{userId,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR},
      #{sex,jdbcType=INTEGER}, #{birthday,jdbcType=VARCHAR}, #{authType,jdbcType=INTEGER}, 
      #{headUrl,jdbcType=VARCHAR}, #{userFrom,jdbcType=INTEGER}, #{userLevel,jdbcType=INTEGER}, 
      #{loginIp,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.junly.model.user.SysUserInfo">
    insert into sys_user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="authType != null">
        auth_type,
      </if>
      <if test="headUrl != null">
        head_url,
      </if>
      <if test="userFrom != null">
        user_from,
      </if>
      <if test="userLevel != null">
        user_level,
      </if>
      <if test="loginIp != null">
        login_ip,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="authType != null">
        #{authType,jdbcType=INTEGER},
      </if>
      <if test="headUrl != null">
        #{headUrl,jdbcType=VARCHAR},
      </if>
      <if test="userFrom != null">
        #{userFrom,jdbcType=INTEGER},
      </if>
      <if test="userLevel != null">
        #{userLevel,jdbcType=INTEGER},
      </if>
      <if test="loginIp != null">
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.junly.model.user.SysUserInfo">
    update sys_user_info
    <set>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="authType != null">
        auth_type = #{authType,jdbcType=INTEGER},
      </if>
      <if test="headUrl != null">
        head_url = #{headUrl,jdbcType=VARCHAR},
      </if>
      <if test="userFrom != null">
        user_from = #{userFrom,jdbcType=INTEGER},
      </if>
      <if test="userLevel != null">
        user_level = #{userLevel,jdbcType=INTEGER},
      </if>
      <if test="loginIp != null">
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.junly.model.user.SysUserInfo">
    update sys_user_info
    set nick_name = #{nickName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=VARCHAR},
      auth_type = #{authType,jdbcType=INTEGER},
      head_url = #{headUrl,jdbcType=VARCHAR},
      user_from = #{userFrom,jdbcType=INTEGER},
      user_level = #{userLevel,jdbcType=INTEGER},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  
  <!--获取登陆用户信息 WEB和APP -->
  <select id="selecLogintUserInfoByParam" parameterType="java.util.Map" resultMap="UserInfoResultMap">
		  SELECT
	 <include refid="User-Info-Base-Column-List"></include>
	<if test="userName != null and userName !=''">
  		and su.user_name=#{userName,jdbcType=VARCHAR}
  	</if>		
  	<if test="passWord != null and passWord !=''">
  		and su.pass_word=#{passWord,jdbcType=VARCHAR}
  	</if>
  	
  	<if test="status !=null ">
  	and su.status=#{status,jdbcType=INTEGER}
  	</if>
  	<if test="user_type !=null">
  		and su.user_type in
  		<foreach collection="userTypes" item="userType" open="(" separator="," close=")">
  			#{userType}
  		</foreach>
  	</if>	
			
  </select>
  
</mapper>